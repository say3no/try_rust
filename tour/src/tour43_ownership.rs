struct Foo {
    x: i32,
}

/*
方のインスタンスを作成して変数に束縛すると、
メモリリソースが作成された、そのすべてのライフタイムに渡って
Rust コンパイラが **検証** します。
束縛された変数はリソースの所有者と呼ばれます。

*/
fn main() -> Result<(), String> {
    // 構造体をインスタンス化し、変数に**束縛**してメモリリソースを作成
    let foo = Foo { x: 42 };
    // foo は所有者

    Ok(())
}
